<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="8" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-07-09T02:49:46 IST" name="Suite" finished-at="2024-07-09T02:50:29 IST" duration-ms="43566">
    <groups>
      <group name="Purchase">
        <method signature="StandAloneTest.submitOrderTest(java.util.HashMap)[pri:0, instance:rahulshettyacademy.StandAloneTest@5f8e8a9d]" name="submitOrderTest" class="rahulshettyacademy.StandAloneTest"/>
      </group> <!-- Purchase -->
      <group name="Errorhandling">
        <method signature="ErrorValidationTest.LoginPageError()[pri:0, instance:rahulshettyacademy.ErrorValidationTest@700fb871]" name="LoginPageError" class="rahulshettyacademy.ErrorValidationTest"/>
        <method signature="ErrorValidationTest.LoginPageErrorcheck()[pri:0, instance:rahulshettyacademy.ErrorValidationTest@700fb871]" name="LoginPageErrorcheck" class="rahulshettyacademy.ErrorValidationTest"/>
      </group> <!-- Errorhandling -->
    </groups>
    <test started-at="2024-07-09T02:49:46 IST" name="ErrorvalidationTest" finished-at="2024-07-09T02:50:13 IST" duration-ms="26830">
      <class name="rahulshettyacademy.ErrorValidationTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.ErrorValidationTest@700fb871]" started-at="2024-07-09T02:49:46 IST" name="launchApplication" finished-at="2024-07-09T02:49:53 IST" duration-ms="6946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="LoginPageError()[pri:0, instance:rahulshettyacademy.ErrorValidationTest@700fb871]" started-at="2024-07-09T02:49:53 IST" name="LoginPageError" finished-at="2024-07-09T02:49:54 IST" duration-ms="1547" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email  password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email  password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at rahulshettyacademy.ErrorValidationTest.LoginPageError(ErrorValidationTest.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginPageError -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.ErrorValidationTest@700fb871]" started-at="2024-07-09T02:49:54 IST" name="tearDown" finished-at="2024-07-09T02:49:55 IST" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.ErrorValidationTest@700fb871]" started-at="2024-07-09T02:49:55 IST" name="launchApplication" finished-at="2024-07-09T02:49:58 IST" duration-ms="3173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginPageError()[pri:0, instance:rahulshettyacademy.ErrorValidationTest@700fb871]" started-at="2024-07-09T02:49:58 IST" name="LoginPageError" finished-at="2024-07-09T02:49:59 IST" duration-ms="875" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email  password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email  password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at rahulshettyacademy.ErrorValidationTest.LoginPageError(ErrorValidationTest.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginPageError -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.ErrorValidationTest@700fb871]" started-at="2024-07-09T02:49:59 IST" name="tearDown" finished-at="2024-07-09T02:49:59 IST" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.ErrorValidationTest@700fb871]" started-at="2024-07-09T02:49:59 IST" name="launchApplication" finished-at="2024-07-09T02:50:02 IST" duration-ms="2889" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginPageErrorcheck()[pri:0, instance:rahulshettyacademy.ErrorValidationTest@700fb871]" started-at="2024-07-09T02:50:02 IST" name="LoginPageErrorcheck" finished-at="2024-07-09T02:50:03 IST" duration-ms="781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginPageErrorcheck -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.ErrorValidationTest@700fb871]" started-at="2024-07-09T02:50:03 IST" name="tearDown" finished-at="2024-07-09T02:50:03 IST" duration-ms="106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.ErrorValidationTest@700fb871]" started-at="2024-07-09T02:50:03 IST" name="launchApplication" finished-at="2024-07-09T02:50:08 IST" duration-ms="5346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ProductErrorValidationMethod()[pri:0, instance:rahulshettyacademy.ErrorValidationTest@700fb871]" started-at="2024-07-09T02:50:08 IST" name="ProductErrorValidationMethod" finished-at="2024-07-09T02:50:12 IST" duration-ms="4030" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidationMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.ErrorValidationTest@700fb871]" started-at="2024-07-09T02:50:12 IST" name="tearDown" finished-at="2024-07-09T02:50:13 IST" duration-ms="230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- rahulshettyacademy.ErrorValidationTest -->
    </test> <!-- ErrorvalidationTest -->
    <test started-at="2024-07-09T02:49:46 IST" name="StandAloneTest" finished-at="2024-07-09T02:50:29 IST" duration-ms="43566">
      <class name="rahulshettyacademy.StandAloneTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.StandAloneTest@5f8e8a9d]" started-at="2024-07-09T02:49:47 IST" name="launchApplication" finished-at="2024-07-09T02:49:52 IST" duration-ms="5416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrderTest(java.util.HashMap)[pri:0, instance:rahulshettyacademy.StandAloneTest@5f8e8a9d]" started-at="2024-07-09T02:49:52 IST" name="submitOrderTest" data-provider="getData" finished-at="2024-07-09T02:50:10 IST" duration-ms="17364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{item=ADIDAS ORIGINAL, pwd=Siva1008, email=12sri@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrderTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.StandAloneTest@5f8e8a9d]" started-at="2024-07-09T02:50:10 IST" name="tearDown" finished-at="2024-07-09T02:50:10 IST" duration-ms="198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.StandAloneTest@5f8e8a9d]" started-at="2024-07-09T02:50:10 IST" name="launchApplication" finished-at="2024-07-09T02:50:14 IST" duration-ms="4035" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrderTest(java.util.HashMap)[pri:0, instance:rahulshettyacademy.StandAloneTest@5f8e8a9d]" started-at="2024-07-09T02:50:14 IST" name="submitOrderTest" data-provider="getData" finished-at="2024-07-09T02:50:26 IST" duration-ms="11717" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{item=ZARA COAT 3, pwd=Lukajeremic23!, email=akul9523@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrderTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.StandAloneTest@5f8e8a9d]" started-at="2024-07-09T02:50:26 IST" name="tearDown" finished-at="2024-07-09T02:50:26 IST" duration-ms="107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.StandAloneTest@5f8e8a9d]" started-at="2024-07-09T02:50:26 IST" name="launchApplication" finished-at="2024-07-09T02:50:28 IST" duration-ms="2452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderVerification()[pri:0, instance:rahulshettyacademy.StandAloneTest@5f8e8a9d]" started-at="2024-07-09T02:50:28 IST" name="OrderVerification" finished-at="2024-07-09T02:50:29 IST" depends-on-methods="rahulshettyacademy.StandAloneTest.submitOrderTest" duration-ms="1083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderVerification -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.StandAloneTest@5f8e8a9d]" started-at="2024-07-09T02:50:29 IST" name="tearDown" finished-at="2024-07-09T02:50:29 IST" duration-ms="133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- rahulshettyacademy.StandAloneTest -->
    </test> <!-- StandAloneTest -->
  </suite> <!-- Suite -->
</testng-results>
